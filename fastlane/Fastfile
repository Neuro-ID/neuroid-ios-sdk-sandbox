# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Running UI testing"
  lane :test do
    run_tests(scheme: "NeuroIdExample")
  end
  
  
  desc "Push a new beta build to TestFlight"
  lane :beta do

    api_key = app_store_connect_api_key(
    key_id: "R2263845L3",
    issuer_id: "69a6de78-cc01-47e3-e053-5b8c7c11a4d1",
    #key_filepath: File.join(Dir.pwd, "Key"),
    key_content: ENV["APP_STORE_API_KEY"],
    is_key_content_base64: true,
    duration: 1200, # optional (maximum 1200)
    in_house: false # optional but may be required if using match/sigh
    )

  # pilot(api_key: api_key)
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    api_key = api_key
    current_version = get_version_number(
    target: "NeuroIdExample" # replace with your main target, required if you have more than one non-test target
    )
    
    latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    version: current_version,
    app_identifier: app_identifier
    )
    
    increment_build_number(
    build_number: (latest_build_number + 1),
    )
    
    
    cert(
     api_key: api_key,
     keychain_password: ENV["KEYCHAIN_PASSWORD"],
     keychain_path: "~/Library/Keychains/signing_temp.keychain-db", # the path to the keychain where your certificates are stored
    )
    
    sigh(
    api_key: api_key,
    app_identifier: app_id,
    provisioning_name: "provisioning.mobileprovision",
    force: true # always recreate this exact profile to ensure it's valid and not expired
    )
    
    profile_name = "App Provisioning Profile" # the name of the profile to use for the build
    output_name = "example-iOS" # specify the name of the .ipa file to generate
    export_method = "app-store" # specify the export method
    compile_bitcode = true # specify whether to enable bitcode
 
    # turn off automatic signing during build so correct code signing identity is guaranteed to be used
    update_code_signing_settings(
    use_automatic_signing: false,
    targets: ["NeuroIdExample"], # specify which targets to update code signing settings for
    code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
    bundle_identifier: app_identifier,
    profile_name: profile_name,
    build_configurations: ["Release"] # only toggle code signing settings for Release configurations
    )
 
    # build the app
    gym(
     scheme: "example-scheme", # replace with name of your projectâ€™s scheme
     output_name: output_name,
     configuration: "Release",
     export_options: {
      method: export_method,
      provisioningProfiles: {
        app_identifier => app_profile_name
      },
      compileBitcode: compile_bitcode
     }
    )
    
    deliver(
     api_key: api_key,
     skip_screenshots: true,
     skip_metadata: true,
     skip_app_version_update: true,
     force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
     run_precheck_before_submit: false # not supported through ASC API yet
    )
  end
end
