# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Running UI testing"
  lane :test do
    run_tests(scheme: "NeuroIdExample")
  end
  
  
  desc "Push a new beta build to TestFlight"
  lane :beta do
    create_keychain(
    name: "KeyChain-Sandbox",
    password: ENV["KEYCHAIN_PASSWORD"],
    default_keychain: true,
    unlock: true,
    timeout: 3600,    
    )
    api_key = app_store_connect_api_key(
    key_id: "R2263845L3",
    issuer_id: "69a6de78-cc01-47e3-e053-5b8c7c11a4d1",
    #key_filepath: File.join(Dir.pwd, "Key"),
    key_content: ENV["APP_STORE_API_KEY"],
    is_key_content_base64: true,
    duration: 1200, # optional (maximum 1200)
    in_house: false # optional but may be required if using match/sigh
    )

  # pilot(api_key: api_key)


    increment_build_number(xcodeproj: "NeuroIdExample.xcodeproj")

   # Fetch the necessary certificates and
    # provisioning profiles.
    match(
      keychain_name: "KeyChain-Sandbox",
      keychain_password: ENV["KEYCHAIN_PASSWORD"],
      readonly: true
    )
    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)
      xcodeproj: "NeuroIdExample.xcodeproj",
      target_filter: "NeuroIdExample", # Name of your project
      profile: "./builds/provisioning.mobileprovision",
      build_configuration: "Debug"
    )
    update_project_team( # Set the right team on your project
      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    )

    build_app(workspace: "NeuroIdExample.xcworkspace", scheme: "NeuroIdExample", include_bitcode: false)
    upload_to_testflight
    delete_keychain(name:"KeyChain-Sandbox")
  end
end
